/* .box {
    width: 100px;
    height: 100px;
    background-color: blue;
} */

/* 복합 선택자 */
/* span태그이면서 클래스값이 orange인 태그 */
span.orange {
    color: orange;
}

/* ul태그의 자식이면서 클래스가 oragne인 태그 (부모,자식)*/
ul>.orange {
    color: pink;
}

/* div태그 안에 orange 클래스 태그 (후손)*/
div .orange {
    color: blue;
}

/* 인접 형제 선택자 */
.orange+li {
    color: chartreuse;
}

/* 일반 형제 선택자 */
.orange~li {
    color: red;

}



/* 가상 클래스 선택자 */
a:hover {
    font-weight: bold;
    font-size: 20px;
}

/* hover */
.box {
    width: 100px;
    height: 100px;
    background-color: tomato;
    transition: 0.4s;
}

.box:hover {
    width: 200px;
}

/* active */
.box-active {
    width: 100px;
    height: 100px;
    background-color: tomato;
    transition: 0.4s;
}

.box-active:active {
    width: 200px;
    background-color: skyblue;
}

/* focus */
input {
    width: 100px;
    outline: none;
    border: 1px solid lightgrey;
    padding: 5px 10px;
    transition: 0.4s;
}

input:focus {
    border-color: blue;
    width: 200px;
}

.fruits {
    font-size: 40px;
}

/* first child */
/* 형제 요소 중 첫번째 요소만 선택 */
.fruits li:first-child {
    color: red;
}

/* last child */
/* 형제 요소 중 마지막 요소만 선택 */
.fruits li:last-child {
    color: yellowgreen;
}

/* nth child */
/* 형제 요소 중 n번째 요소라면 선택 */
.fruits li:nth-child(2) {
    color: purple;
}

/* nth child(2n) */
/* '짝수'번째 요소들만 선택 */
.fruits li:nth-child(2n) {
    color: springgreen;
}

/* nth child(n+3) */
/* 3번째 요소부터 이후 요소들을 선택 */
.fruits li:nth-child(n+3) {
    color: orange;
}

/* nht of type */
/* 타입(태그이름)과 동일한 타입인 형제 요소 중 선택 */
.fruits li:nth-of-type(3) {
    color: red;
}

